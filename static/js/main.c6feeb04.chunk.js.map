{"version":3,"sources":["Components/Home/TopTable/Table.js","Components/Home/TopTable/AlarmColumns.js","Components/Home/TopTable/DashBoardAlarm.js","Components/Home/BottomLeftTable/FilteringTable.js","Components/Home/BottomLeftTable/SensorColumns.js","Components/Home/BottomLeftTable/DashBoardSensor.js","Components/Home/BottomRightTable/FilteringTable.js","Components/Home/BottomRightTable/SensorColumns.js","Components/Home/BottomRightTable/DashBoardSensor.js","Components/Navbar/icons/list.svg","Components/Navbar/icons/cog.svg","Components/Navbar/icons/logout.svg","Components/Navbar/icons/plus.svg","Components/Navbar/icons/imsafe.png","Components/Navbar/Functions/Topbar.js","Components/Navbar/Functions/NavItem.js","Components/Navbar/Functions/DropdownMenu.js","Components/Navbar/Navbar.js","Components/Home/HomeRouter.js","Components/Settings/Pages/ChangePassword.js","Components/Settings/Pages/Myprofile.js","Components/Sidebar/Data/SidebarData.js","Components/Sidebar/Sidebar.js","Components/Settings/SettingsRouter.js","Components/Login/icons/login.svg","Components/Login/Signin.js","Components/Login/Signup.js","Components/Login/LoginRouter.js","Components/Create/Create.js","Components/Create/CreateRouter.js","Components/Inquiry/Pages/Tableset/Table.js","Components/Inquiry/Pages/Tableset/StateColumns.js","Components/Inquiry/Pages/State.js","Components/Inquiry/Pages/Tableset/SensorColumns.js","Components/Inquiry/Pages/Sensor.js","Components/Inquiry/Pages/Tableset/AlarmColumns.js","Components/Inquiry/Pages/Alarm.js","Components/Inquiry/InquiryRouter.js","Components/Detail/WeeklyReport.js","Components/Detail/Detail.js","App.js","index.js"],"names":["Table","columns","data","useTable","initialState","sortBy","id","desc","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","i","getRowProps","cells","cell","getCellProps","COLUMNS","Header","accessor","DashBoardAlarm","React","useMemo","MOCK_DATA","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","filterTypes","text","filter","rowValue","values","String","toLowerCase","startsWith","defaultColumn","Filter","filters","useFilters","useGlobalFilter","usePagination","page","style","verticalAlign","sorted","getSortByToggleProps","isSorted","isSortedDesc","Cell","filterMethod","indexOf","DashBoardSensor","_g","_g2","_g3","_g4","_g5","_g6","_g7","_g8","_g9","_g10","_g11","_g12","_g13","_g14","_g15","_g16","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgList","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","d","cx","cy","r","_path","ForwardRef","SvgCog","_path2","SvgLogout","height","width","SvgPlus","Topbar","to","src","Title","alt","children","NavItem","useState","open","setOpen","url","onMouseEnter","onMouseLeave","icon","DropdownMenuC","activeMenu","setActiveMenu","menuHeight","setMenuHeight","dropdownRef","useRef","DropdownItem","onClick","goToMenu","leftIcon","rightIcon","useEffect","current","firstChild","offsetHeight","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","el","DropdownMenuI","DropdownMenuS","Navbar","HomeRouter","ChangePassword","type","Myprofile","SidebarDataSettings","link","SidebarDataInquiry","SidebarSettings","val","window","location","pathname","SidebarInquiry","SettingsRouter","match","exact","path","component","Signin","ID","setID","PW","setPW","loginIcon","IMSAFE","Signup","PWC","setPWC","Email","setEmail","SigninRouter","SignupRouter","Create","name","CreateRouter","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","setValue","useAsyncDebounce","role","colSpan","fontSize","border","NameColumnFilter","AddressColumnFilter","PhoneColumnFilter","MedicalRecordsColumnFilter","SelectColumnFilter","options","Set","forEach","add","option","BooleanColumnFilter","NumberRangeColumnFilter","min","max","Math","display","old","parseInt","fuzzyTextFilterFn","matchSorter","DateRangeColumnFilter","Date","rowDate","toISOString","concat","dateBetweenFilterFn","filterValues","sd","ed","time","fuzzyText","dateBetween","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","state","pageIndex","pageSize","defaultValue","pageNumber","Number","disabled","autoRemove","original","성함","age","나이","gender","성별","address","주소","phoneNum","전화번호","medicalRecord","진료기록","protector","보호자","protectorNum","보호자전화번호","PIC","담당자","State","Sensor","Alarm","InquiryRouter","WeeklyReport","Detail","alarmState","alarmLog","sensorInf","sensorName","batteryStatus","batteryChangeDate","batteryChangeCount","powerStatus","networkStatus","history","push","printLog","log","Component","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6feeb04.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useTable, useSortBy } from 'react-table'\r\n\r\n\r\nfunction Table({ columns, data }) {\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: {\r\n                sortBy: [\r\n                    {\r\n                        id: \"alarm-date\",\r\n                        desc: true\r\n                    },\r\n                ],\r\n            }\r\n        },\r\n        useSortBy\r\n    )\r\n\r\n    // We don't want to render all of the rows for this example, so cap\r\n    // it for this use case\r\n    const firstPageRows = rows.slice(0, 3)\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className={column.className} {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                    {/* Render the columns filter UI */}\r\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { Table };","\r\nexport const COLUMNS = [\r\n    {\r\n        Header: \"날짜\",\r\n        accessor: \"날짜\",\r\n        className: \"alarm-date\",\r\n        id: 'alarm-date',\r\n    },\r\n    {\r\n        Header: \"알람 내용\",\r\n        accessor: \"알람내용\",\r\n        className: \"alarm-content\",\r\n    },\r\n    {\r\n        Header: \"작동 센서\",\r\n        accessor: \"작동센서\",\r\n        className: \"alarm-sensor\",\r\n    },\r\n    {\r\n        Header: '성함',\r\n        accessor: '성함',\r\n        className: \"name\",\r\n    }\r\n]\r\n\r\n","import React from \"react\";\r\nimport { Table } from \"./Table\";\r\nimport { COLUMNS } from \"./AlarmColumns.js\";\r\nimport MOCK_DATA from \"../../../JSON/MOCK_DATA_ALARM.json\";\r\nimport \"../CSS/Home.css\";\r\n\r\nfunction DashBoardAlarm() {\r\n    const columns = React.useMemo(() => COLUMNS, [])\r\n    const data = React.useMemo(() => MOCK_DATA, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='alarm'>\r\n                <Table columns={columns} data={data} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashBoardAlarm;","import React from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, usePagination, useSortBy } from 'react-table'\r\n// A great library for fuzzy filtering/sorting items\r\nimport { matchSorter } from 'match-sorter'\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NameColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`이름을 입력하세요`}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nfunction AddressColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`주소를 입력하세요`}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction PhoneColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`전화번호를 입력하세요`}\r\n        />\r\n    )\r\n}\r\nfunction MedicalRecordsColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`진료기록을 입력하세요`}\r\n        />\r\n    )\r\n}\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            options.add(row.values[id])\r\n        })\r\n        return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            className=\"select\"\r\n            value={filterValue}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            {options.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                    {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    )\r\n}\r\n\r\nfunction BooleanColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    /*\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            options.add(row.values[id])\r\n        })\r\n        return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n    */\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            className=\"select\"\r\n            value={filterValue}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            <option value=\"true\">양호</option>\r\n            <option value=\"false\" >불량</option>\r\n        </select>\r\n    )\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the min and max\r\n    // using the preFilteredRows\r\n\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n            min = Math.min(row.values[id], min)\r\n            max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={filterValue || min}\r\n                onChange={e => {\r\n                    setFilter(parseInt(e.target.value, 10))\r\n                }}\r\n            />\r\n            <button onClick={() => setFilter(undefined)}>Off</button>\r\n        </>\r\n    )\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n            min = Math.min(row.values[id], min)\r\n            max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <input\r\n                className=\"numRangePrevious\"\r\n                value={filterValue[0] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n                }}\r\n                placeholder={`최소 (${min})`}\r\n\r\n            />\r\n            <div> ~ </div>\r\n            <input\r\n                className=\"numRangeNext\"\r\n                value={filterValue[1] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n                }}\r\n                placeholder={`최대 (${max})`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n/*\r\nfunction DateRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id }\r\n}) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]).getTime() : 0;\r\n        let max = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]).getTime() : 0;\r\n\r\n        preFilteredRows.forEach((row) => {\r\n            min = Math.min(new Date(row.values[id]).getTime(), min);\r\n            max = Math.max(new Date(row.values[id]).getTime(), max);\r\n        });\r\n        return [min, max];\r\n    }, [id, preFilteredRows]);\r\n\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <input\r\n                value={filterValue[0] || \"\"}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [val || undefined, old[1]]);\r\n                }}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginRight: \"0.5rem\"\r\n                }}\r\n            />\r\n            to\r\n            <input\r\n                value={filterValue[1] || \"\"}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [old[0], val || undefined]);\r\n                }}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginLeft: \"0.5rem\"\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction dateBetweenFilterFn(rows, id, filterValues) {\r\n    let sd = new Date(filterValues[0]);\r\n    let ed = new Date(filterValues[1]);\r\n    console.log(rows, id, filterValues)\r\n    return rows.filter(r => {\r\n        var time = new Date(r.values[id]);\r\n        console.log(time, ed, sd)\r\n        if (filterValues.length === 0) return rows;\r\n        return (time >= sd && time <= ed);\r\n    });\r\n}\r\n\r\ndateBetweenFilterFn.autoRemove = val => !val;\r\n\r\n*/\r\nfunction DateRangeColumnFilter({\r\n    column: {\r\n        filterValue = [],\r\n        preFilteredRows,\r\n        setFilter,\r\n        id\r\n    } }) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]) : new Date(0)\r\n        let max = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]) : new Date(0)\r\n\r\n        preFilteredRows.forEach(row => {\r\n            const rowDate = new Date(row.values[id])\r\n\r\n            min = rowDate <= min ? rowDate : min\r\n            max = rowDate >= max ? rowDate : max\r\n        })\r\n\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"daterange-previous\"\r\n                min={min.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [val ? val : undefined, old[1]])\r\n                }}\r\n                type=\"date\"\r\n                value={filterValue[0] || ''}\r\n            />\r\n            <div>\r\n                {' ~ '}\r\n            </div>\r\n            <input\r\n                className=\"daterange-next\"\r\n                max={max.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [old[0], val ? val.concat('T23:59:59.999Z') : undefined])\r\n                }}\r\n                type=\"date\"\r\n                value={filterValue[1]?.slice(0, 10) || ''}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Our table component\r\nfunction Table({ columns, data }) {\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            // Add a new fuzzyTextFilterFn filter type.\r\n            // Or, override the default text filter to use\r\n            // \"startWith\"\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter(row => {\r\n                    const rowValue = row.values[id]\r\n                    return rowValue !== undefined\r\n                        ? String(rowValue)\r\n                            .toLowerCase()\r\n                            .startsWith(String(filterValue).toLowerCase())\r\n                        : true\r\n                })\r\n            },\r\n        }),\r\n        []\r\n    )\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        prepareRow,\r\n\r\n\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            // Be sure to pass the defaultColumn option\r\n            filterTypes,\r\n            initialState: {\r\n                filters: [\r\n                    {\r\n                        id: 'powerstatus',\r\n                        value: false,\r\n                    },\r\n\r\n                ]\r\n\r\n            }\r\n        },\r\n        useFilters, // useFilters!\r\n        useGlobalFilter, // useGlobalFilter!\r\n        useSortBy,\r\n        usePagination,\r\n    )\r\n\r\n\r\n    const firstPageRows = page.slice(0, 3);\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} style={{ verticalAlign: 'top' }}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className={column.className} {...column.getHeaderProps()} sorted={column.sorted}>\r\n                                    <span {...column.getSortByToggleProps()}>\r\n                                        {column.render('Header')}\r\n                                    </span>\r\n                                    <span>{column.isSorted ? (column.isSortedDesc ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>) : ''}</span>\r\n                                    {/* Render the columns filter UI */}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n    return rows.filter(row => {\r\n        const rowValue = row.values[id]\r\n        return rowValue >= filterValue\r\n    })\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\n\r\n\r\nexport { Table, SliderColumnFilter, NumberRangeColumnFilter, SelectColumnFilter, filterGreaterThan, NameColumnFilter, AddressColumnFilter, PhoneColumnFilter, MedicalRecordsColumnFilter, DateRangeColumnFilter, BooleanColumnFilter };","export const COLUMNS = [\r\n    {\r\n        Header: \"전원 상태 이상\",\r\n        columns: [\r\n\r\n            {\r\n                Header: '센서 명',\r\n                accessor: '센서명',\r\n                className: 'sensor-name',\r\n                id: 'sensor-name',\r\n            },\r\n            {\r\n                Header: '연결 가구',\r\n                accessor: '연결가구',\r\n                className: 'connected',\r\n            },\r\n            {\r\n                id: 'powerstatus',\r\n                Header: '전원상태',\r\n                accessor: \"powerstatus\",\r\n                Cell: ({ value }) => (value === true ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>),\r\n                filterMethod: (filter, row) => {\r\n                    if (filter.value.indexOf(\"all\") > -1) {\r\n                        return true;\r\n                    }\r\n                    if (filter.value.indexOf(\"true\") > -1) {\r\n                        return row[filter.id] === true;\r\n                    }\r\n                    return row[filter.id] === false;\r\n                },\r\n                className: 'powerstatus',\r\n            },\r\n        ]\r\n    },\r\n]\r\n","import React from \"react\";\r\nimport { Table } from \"./FilteringTable\";\r\nimport { COLUMNS } from \"./SensorColumns.js\";\r\nimport MOCK_DATA from \"../../../JSON/MOCK_DATA_SENSOR.json\";\r\nimport \"../CSS/Home.css\";\r\n\r\nfunction DashBoardSensor() {\r\n    const columns = React.useMemo(() => COLUMNS, [])\r\n    const data = React.useMemo(() => MOCK_DATA, [])\r\n\r\n    return (\r\n        <>\r\n            <Table columns={columns} data={data} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashBoardSensor;","import React from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, usePagination, useSortBy } from 'react-table'\r\n// A great library for fuzzy filtering/sorting items\r\nimport { matchSorter } from 'match-sorter'\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NameColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`이름을 입력하세요`}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nfunction AddressColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`주소를 입력하세요`}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction PhoneColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`전화번호를 입력하세요`}\r\n        />\r\n    )\r\n}\r\nfunction MedicalRecordsColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`진료기록을 입력하세요`}\r\n        />\r\n    )\r\n}\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            options.add(row.values[id])\r\n        })\r\n        return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            className=\"select\"\r\n            value={filterValue}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            {options.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                    {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    )\r\n}\r\n\r\nfunction BooleanColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    /*\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            options.add(row.values[id])\r\n        })\r\n        return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n    */\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            className=\"select\"\r\n            value={filterValue}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            <option value=\"true\">양호</option>\r\n            <option value=\"false\" >불량</option>\r\n        </select>\r\n    )\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the min and max\r\n    // using the preFilteredRows\r\n\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n            min = Math.min(row.values[id], min)\r\n            max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={filterValue || min}\r\n                onChange={e => {\r\n                    setFilter(parseInt(e.target.value, 10))\r\n                }}\r\n            />\r\n            <button onClick={() => setFilter(undefined)}>Off</button>\r\n        </>\r\n    )\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n            min = Math.min(row.values[id], min)\r\n            max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <input\r\n                className=\"numRangePrevious\"\r\n                value={filterValue[0] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n                }}\r\n                placeholder={`최소 (${min})`}\r\n\r\n            />\r\n            <div> ~ </div>\r\n            <input\r\n                className=\"numRangeNext\"\r\n                value={filterValue[1] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n                }}\r\n                placeholder={`최대 (${max})`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n/*\r\nfunction DateRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id }\r\n}) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]).getTime() : 0;\r\n        let max = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]).getTime() : 0;\r\n\r\n        preFilteredRows.forEach((row) => {\r\n            min = Math.min(new Date(row.values[id]).getTime(), min);\r\n            max = Math.max(new Date(row.values[id]).getTime(), max);\r\n        });\r\n        return [min, max];\r\n    }, [id, preFilteredRows]);\r\n\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <input\r\n                value={filterValue[0] || \"\"}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [val || undefined, old[1]]);\r\n                }}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginRight: \"0.5rem\"\r\n                }}\r\n            />\r\n            to\r\n            <input\r\n                value={filterValue[1] || \"\"}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [old[0], val || undefined]);\r\n                }}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginLeft: \"0.5rem\"\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction dateBetweenFilterFn(rows, id, filterValues) {\r\n    let sd = new Date(filterValues[0]);\r\n    let ed = new Date(filterValues[1]);\r\n    console.log(rows, id, filterValues)\r\n    return rows.filter(r => {\r\n        var time = new Date(r.values[id]);\r\n        console.log(time, ed, sd)\r\n        if (filterValues.length === 0) return rows;\r\n        return (time >= sd && time <= ed);\r\n    });\r\n}\r\n\r\ndateBetweenFilterFn.autoRemove = val => !val;\r\n\r\n*/\r\nfunction DateRangeColumnFilter({\r\n    column: {\r\n        filterValue = [],\r\n        preFilteredRows,\r\n        setFilter,\r\n        id\r\n    } }) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]) : new Date(0)\r\n        let max = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]) : new Date(0)\r\n\r\n        preFilteredRows.forEach(row => {\r\n            const rowDate = new Date(row.values[id])\r\n\r\n            min = rowDate <= min ? rowDate : min\r\n            max = rowDate >= max ? rowDate : max\r\n        })\r\n\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"daterange-previous\"\r\n                min={min.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [val ? val : undefined, old[1]])\r\n                }}\r\n                type=\"date\"\r\n                value={filterValue[0] || ''}\r\n            />\r\n            <div>\r\n                {' ~ '}\r\n            </div>\r\n            <input\r\n                className=\"daterange-next\"\r\n                max={max.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [old[0], val ? val.concat('T23:59:59.999Z') : undefined])\r\n                }}\r\n                type=\"date\"\r\n                value={filterValue[1]?.slice(0, 10) || ''}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// Our table component\r\nfunction Table({ columns, data }) {\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            // Add a new fuzzyTextFilterFn filter type.\r\n            // Or, override the default text filter to use\r\n            // \"startWith\"\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter(row => {\r\n                    const rowValue = row.values[id]\r\n                    return rowValue !== undefined\r\n                        ? String(rowValue)\r\n                            .toLowerCase()\r\n                            .startsWith(String(filterValue).toLowerCase())\r\n                        : true\r\n                })\r\n            },\r\n        }),\r\n        []\r\n    )\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        prepareRow,\r\n\r\n\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            // Be sure to pass the defaultColumn option\r\n            filterTypes,\r\n            initialState: {\r\n                filters: [\r\n                    {\r\n                        id: 'networkstatus',\r\n                        value: false,\r\n                    },\r\n\r\n                ]\r\n\r\n            }\r\n        },\r\n        useFilters, // useFilters!\r\n        useGlobalFilter, // useGlobalFilter!\r\n        useSortBy,\r\n        usePagination,\r\n    )\r\n\r\n\r\n    const firstPageRows = page.slice(0, 3);\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} style={{ verticalAlign: 'top' }}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className={column.className} {...column.getHeaderProps()} sorted={column.sorted}>\r\n                                    <span {...column.getSortByToggleProps()}>\r\n                                        {column.render('Header')}\r\n                                    </span>\r\n                                    <span>{column.isSorted ? (column.isSortedDesc ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>) : ''}</span>\r\n                                    {/* Render the columns filter UI */}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n    return rows.filter(row => {\r\n        const rowValue = row.values[id]\r\n        return rowValue >= filterValue\r\n    })\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\n\r\n\r\nexport { Table, SliderColumnFilter, NumberRangeColumnFilter, SelectColumnFilter, filterGreaterThan, NameColumnFilter, AddressColumnFilter, PhoneColumnFilter, MedicalRecordsColumnFilter, DateRangeColumnFilter, BooleanColumnFilter };","export const COLUMNS = [\r\n    {\r\n        Header: \"네트워크 상태 이상\",\r\n        columns: [\r\n\r\n            {\r\n                Header: '센서 명',\r\n                accessor: '센서명',\r\n                className: 'sensor-name',\r\n                id: 'sensor-name2',\r\n            },\r\n            {\r\n                id: '2',\r\n                Header: '연결 가구',\r\n                accessor: '연결가구',\r\n                className: 'connected',\r\n            },\r\n            {\r\n                id: 'networkstatus',\r\n                Header: '네트워크연결상태',\r\n                accessor: \"networkstatus\",\r\n                Cell: ({ value }) => (value === true ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>),\r\n                filterMethod: (filter, row) => {\r\n                    if (filter.value.indexOf(\"all\") > -1) {\r\n                        return true;\r\n                    }\r\n                    if (filter.value.indexOf(\"true\") > -1) {\r\n                        return row[filter.id] === true;\r\n                    }\r\n                    return row[filter.id] === false;\r\n                },\r\n                className: 'networkstatus',\r\n            },\r\n        ]\r\n    },\r\n]\r\n","import React from \"react\";\r\nimport { Table } from \"./FilteringTable\";\r\nimport { COLUMNS } from \"./SensorColumns.js\";\r\nimport MOCK_DATA from \"../../../JSON/MOCK_DATA_SENSOR.json\";\r\nimport \"../CSS/Home.css\";\r\n\r\nfunction DashBoardSensor() {\r\n    const columns = React.useMemo(() => COLUMNS, [])\r\n    const data = React.useMemo(() => MOCK_DATA, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Table columns={columns} data={data} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashBoardSensor;","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgList(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 60.123 60.123\",\n    style: {\n      enableBackground: \"new 0 0 60.123 60.123\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.124,51.893H16.92c-1.657,0-3-1.343-3-3s1.343-3,3-3h40.203c1.657,0,3,1.343,3,3S58.781,51.893,57.124,51.893z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.124,33.062H16.92c-1.657,0-3-1.343-3-3s1.343-3,3-3h40.203c1.657,0,3,1.343,3,3 C60.124,31.719,58.781,33.062,57.124,33.062z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.124,14.231H16.92c-1.657,0-3-1.343-3-3s1.343-3,3-3h40.203c1.657,0,3,1.343,3,3S58.781,14.231,57.124,14.231z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.029,\n    cy: 11.463,\n    r: 4.029\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.029,\n    cy: 30.062,\n    r: 4.029\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4.029,\n    cy: 48.661,\n    r: 4.029\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgList);\nexport default __webpack_public_path__ + \"static/media/list.b91688f1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCog(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\",\n    className: \"\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCog);\nexport default __webpack_public_path__ + \"static/media/cog.8c5b9138.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogout(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"512pt\",\n    viewBox: \"0 0 512.00533 512\",\n    width: \"512pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m320 277.335938c-11.796875 0-21.332031 9.558593-21.332031 21.332031v85.335937c0 11.753906-9.558594 21.332032-21.335938 21.332032h-64v-320c0-18.21875-11.605469-34.496094-29.054687-40.554688l-6.316406-2.113281h99.371093c11.777344 0 21.335938 9.578125 21.335938 21.335937v64c0 11.773438 9.535156 21.332032 21.332031 21.332032s21.332031-9.558594 21.332031-21.332032v-64c0-35.285156-28.714843-63.99999975-64-63.99999975h-229.332031c-.8125 0-1.492188.36328175-2.28125.46874975-1.027344-.085937-2.007812-.46874975-3.050781-.46874975-23.53125 0-42.667969 19.13281275-42.667969 42.66406275v384c0 18.21875 11.605469 34.496093 29.054688 40.554687l128.386718 42.796875c4.351563 1.34375 8.679688 1.984375 13.226563 1.984375 23.53125 0 42.664062-19.136718 42.664062-42.667968v-21.332032h64c35.285157 0 64-28.714844 64-64v-85.335937c0-11.773438-9.535156-21.332031-21.332031-21.332031zm0 0\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m505.75 198.253906-85.335938-85.332031c-6.097656-6.101563-15.273437-7.9375-23.25-4.632813-7.957031 3.308594-13.164062 11.09375-13.164062 19.714844v64h-85.332031c-11.777344 0-21.335938 9.554688-21.335938 21.332032 0 11.777343 9.558594 21.332031 21.335938 21.332031h85.332031v64c0 8.621093 5.207031 16.40625 13.164062 19.714843 7.976563 3.304688 17.152344 1.46875 23.25-4.628906l85.335938-85.335937c8.339844-8.339844 8.339844-21.824219 0-30.164063zm0 0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogout);\nexport default __webpack_public_path__ + \"static/media/logout.b382cc9b.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n    className: \"\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.12fd51ec.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/imsafe.7c9a85f9.png\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Title from \"../icons/imsafe.png\";\r\nimport \"../CSS/Navbar.css\";\r\nfunction Topbar(props) {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <Link to='/home' className=\"navbar-title\"><img src={Title} height=\"40px\" alt=\"\" /></Link>\r\n            <ul className=\"navbar-nav\">\r\n                {props.children}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Topbar;","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../CSS/Navbar.css\";\r\nfunction NavItem(props) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <li className=\"nav-item\">\r\n            <Link to={props.url} className=\"icon-button\"\r\n                onMouseEnter={() => setOpen(true)}\r\n                onMouseLeave={() => setOpen(false)}\r\n            >\r\n                {props.icon}\r\n            </Link>\r\n\r\n            {open && props.children}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NavItem;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { ReactComponent as PlusIcon } from \"../icons/plus.svg\";\r\nimport { ReactComponent as ListIcon } from \"../icons/list.svg\";\r\nimport { ReactComponent as CogIcon } from \"../icons/cog.svg\";\r\nimport \"../CSS/Navbar.css\";\r\n\r\n\r\nfunction DropdownMenuC() {\r\n    const [activeMenu, setActiveMenu] = useState('main');\r\n    const [menuHeight, setMenuHeight] = useState(null);\r\n    const dropdownRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\r\n    }, [])\r\n\r\n    function calcHeight(el) {\r\n        const height = el.offsetHeight;\r\n        setMenuHeight(height);\r\n    }\r\n\r\n    function DropdownItem(props) {\r\n        return (\r\n            <Link to='/home' className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n                <span className=\"icon-button\">{props.leftIcon}</span>\r\n                {props.children}\r\n                <span className=\"icon-right\">{props.rightIcon}</span>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n\r\n            <CSSTransition\r\n                in={activeMenu === 'main'}\r\n                timeout={500}\r\n                classNames=\"menu-primary\"\r\n                unmountOnExit\r\n                onEnter={calcHeight}>\r\n                <div className=\"menu\">\r\n                    <DropdownItem\r\n                        leftIcon={<PlusIcon />}\r\n                    >노인 생성</DropdownItem>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DropdownMenuI() {\r\n    const [activeMenu, setActiveMenu] = useState('main');\r\n    const [menuHeight, setMenuHeight] = useState(null);\r\n    const dropdownRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\r\n    }, [])\r\n\r\n    function calcHeight(el) {\r\n        const height = el.offsetHeight;\r\n        setMenuHeight(height);\r\n    }\r\n\r\n    function DropdownItem(props) {\r\n        return (\r\n            <Link to=\"/\" className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n                <span className=\"icon-button\">{props.leftIcon}</span>\r\n                {props.children}\r\n                <span className=\"icon-right\">{props.rightIcon}</span>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n\r\n            <CSSTransition\r\n                in={activeMenu === 'main'}\r\n                timeout={500}\r\n                classNames=\"menu-primary\"\r\n                unmountOnExit\r\n                onEnter={calcHeight}>\r\n                <div className=\"menu\">\r\n                    <DropdownItem\r\n                        leftIcon={<ListIcon />}\r\n                    >조회</DropdownItem>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DropdownMenuS() {\r\n    const [activeMenu, setActiveMenu] = useState('main');\r\n    const [menuHeight, setMenuHeight] = useState(null);\r\n    const dropdownRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\r\n    }, [])\r\n\r\n    function calcHeight(el) {\r\n        const height = el.offsetHeight;\r\n        setMenuHeight(height);\r\n    }\r\n\r\n    function DropdownItem(props) {\r\n        return (\r\n            <Link to=\"/\" className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n                <span className=\"icon-button\">{props.leftIcon}</span>\r\n                {props.children}\r\n                <span className=\"icon-right\">{props.rightIcon}</span>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n\r\n            <CSSTransition\r\n                in={activeMenu === 'main'}\r\n                timeout={500}\r\n                classNames=\"menu-primary\"\r\n                unmountOnExit\r\n                onEnter={calcHeight}>\r\n                <div className=\"menu\">\r\n                    <DropdownItem\r\n                        leftIcon={<CogIcon />}\r\n                    >설정</DropdownItem>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport { DropdownMenuC, DropdownMenuI, DropdownMenuS };","import React from \"react\";\r\nimport { ReactComponent as ListIcon } from \"./icons/list.svg\";\r\nimport { ReactComponent as CogIcon } from './icons/cog.svg';\r\nimport { ReactComponent as LogoutIcon } from './icons/logout.svg';\r\nimport { ReactComponent as PlusIcon } from './icons/plus.svg';\r\nimport Topbar from \"./Functions/Topbar.js\";\r\nimport NavItem from \"./Functions/NavItem.js\";\r\nimport { DropdownMenuC, DropdownMenuI, DropdownMenuS } from \"./Functions/DropdownMenu.js\";\r\nimport \"./CSS/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <Topbar>\r\n            <NavItem icon={<PlusIcon />} url=\"/create\">\r\n                <DropdownMenuC />\r\n            </NavItem>\r\n            <NavItem icon={<ListIcon />} url=\"/inquiry/state\">\r\n                <DropdownMenuI />\r\n            </NavItem>\r\n            <NavItem icon={<CogIcon />} url=\"/settings/myprofile\">\r\n                <DropdownMenuS />\r\n            </NavItem>\r\n            <NavItem icon={<LogoutIcon />} >\r\n            </NavItem>\r\n        </Topbar>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DashBoardAlarm from \"./TopTable/DashBoardAlarm.js\";\r\nimport DashBoardLeftSensor from \"./BottomLeftTable/DashBoardSensor.js\";\r\nimport DashBoardRightSensor from \"./BottomRightTable/DashBoardSensor.js\";\r\nimport Navbar from \"../Navbar/Navbar.js\";\r\nimport \"./CSS/Home.css\";\r\nfunction HomeRouter() {\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"dashboard\">\r\n                <div className=\"top-block\">\r\n                    <h2>최근 온 알람</h2>\r\n                    <DashBoardAlarm />\r\n                    <div className='more'>\r\n                        <Link to=\"/inquiry/alarm\">\r\n                            더보기...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-block\">\r\n                    <h2>센서 이상 유무</h2>\r\n                    <div className=\"block-table\">\r\n                        <div className=\"left\">\r\n                            <DashBoardLeftSensor />\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <DashBoardRightSensor />\r\n                        </div>\r\n                    </div>\r\n                    <div className='more'>\r\n                        <Link to=\"/inquiry/sensor\">\r\n                            더보기...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { HomeRouter };","import React from \"react\";\r\nimport \"../CSS/Settings.css\";\r\n\r\nfunction ChangePassword() {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='myprofile-content'>\r\n                <form className='myprofile-changepw'>\r\n                    <div className=\"myprofile-title\">\r\n                        비밀번호 변경\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">아이디 </div>\r\n                        <input type=\"id\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">기존 비밀번호</div>\r\n                        <input type=\"password\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">새로운 비밀번호</div>\r\n                        <input type=\"password\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">비밀번호 확인</div>\r\n                        <input type=\"password\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\"></div>\r\n                        <input type=\"submit\" className=\"inputvalue btn\" value=\"비밀번호 변경\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","import React from \"react\";\r\nimport \"../CSS/Settings.css\";\r\n\r\nfunction Myprofile() {\r\n    return (\r\n        <>\r\n            <div className='myprofile-content'>\r\n                <div className='myprofile-profile'>\r\n                    <div className=\"myprofile-title\">\r\n                        내 프로필\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">아이디 </div>\r\n                        <div className=\"right\">okok0415</div>\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">이메일 주소 </div>\r\n                        <div className=\"right\">dlawjdals11@naver.com</div>\r\n                    </div>\r\n                    <div className=\"myprofile-instance\">\r\n                        <div className=\"left\">가입일 </div>\r\n                        <div className=\"right\">2021-07-15</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Myprofile;","import React from 'react'\r\n\r\nexport const SidebarDataSettings = [\r\n    {\r\n        id: 1,\r\n        title: \"프로필\",\r\n        icon: <i className=\"fas fa-id-badge\"></i>,\r\n        link: \"/settings/myprofile\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"비밀번호 변경\",\r\n        icon: <i className=\"fas fa-key\"></i>,\r\n        link: \"/settings/changepassword\"\r\n    }\r\n];\r\n\r\nexport const SidebarDataInquiry = [\r\n    {\r\n        id: 1,\r\n        title: \"노인 상태\",\r\n        icon: <i className=\"fas fa-hand-holding-heart\"></i>,\r\n        link: \"/inquiry/state\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"센서\",\r\n        icon: <i className=\"fas fa-hdd\"></i>,\r\n        link: \"/inquiry/sensor\"\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"알람\",\r\n        icon: <i className=\"fas fa-bell\"></i>,\r\n        link: \"/inquiry/alarm\"\r\n    }\r\n];\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CSS/Sidebar.css\";\r\nimport { SidebarDataSettings, SidebarDataInquiry } from \"./Data/SidebarData.js\";\r\n\r\nfunction SidebarSettings() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-container\">\r\n                <ul className=\"sidebar-list\">\r\n                    {SidebarDataSettings.map((val, key) => {\r\n                        return (\r\n                            <Link to={val.link}>\r\n                                <li key={key} className=\"row\" id={window.location.pathname === val.link ? \"active\" : \"\"}>\r\n                                    <div id=\"icon\">\r\n                                        {val.icon}\r\n                                    </div>\r\n                                    <div id=\"title\">\r\n                                        {val.title}\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SidebarInquiry() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-container\">\r\n                <ul className=\"sidebar-list\">\r\n                    {SidebarDataInquiry.map((val) => {\r\n                        return (\r\n                            <Link to={val.link}>\r\n                                <li key={val.id} className=\"row\" id={window.location.pathname === val.link ? \"active\" : \"\"}>\r\n                                    <div id=\"icon\">\r\n                                        {val.icon}\r\n                                    </div>\r\n                                    <div id=\"title\">\r\n                                        {val.title}\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { SidebarSettings, SidebarInquiry };","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ChangePassword from \"./Pages/ChangePassword.js\";\r\nimport Myprofile from \"./Pages/Myprofile.js\";\r\nimport Navbar from \"../Navbar/Navbar.js\";\r\nimport { SidebarSettings } from \"../Sidebar/Sidebar.js\";\r\nimport \"./CSS/Settings.css\";\r\n\r\nexport const SettingsRouter = ({ match }) => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"settings-grid\">\r\n                <div className=\"settings-sidebar\">\r\n                    <SidebarSettings />\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path={match.path + '/myprofile'} component={Myprofile} />\r\n                    <Route exact path={match.path + '/changepassword'} component={ChangePassword} />\r\n                </Switch>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/login.612ca291.svg\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport loginIcon from \"./icons/login.svg\";\r\nimport IMSAFE from \"../Navbar/icons/imsafe.png\"\r\nimport \"./CSS/Signin.css\";\r\n\r\n\r\nfunction Signin() {\r\n    const [ID, setID] = useState(false)\r\n    const [PW, setPW] = useState(false)\r\n\r\n    const handleID = () => setID(true)\r\n    const handlePW = () => setPW(true)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"login container\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-block\">\r\n                        <img src={loginIcon} alt=\"\" />\r\n                        <Link to=\"/register\" className=\"register-link\">생성된 아이디가 없나요? 회원가입</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-content\">\r\n                    <form >\r\n                        <img src={IMSAFE} height=\"70px\" alt=\"\" />\r\n                        <div className={ID ? \"input-div one focus\" : \"input-div one\"}>\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h5>아이디</h5>\r\n                                <input onClick={handleID} className=\"input\" type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className={PW ? \"input-div two focus\" : \"input-div two\"}>\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h5>비밀번호</h5>\r\n                                <input onClick={handlePW} className=\"input\" type=\"password\" />\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn\" value=\"로그인\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport loginIcon from \"./icons/login.svg\";\r\nimport IMSAFE from \"../Navbar/icons/imsafe.png\"\r\nimport \"./CSS/Signup.css\";\r\n\r\n\r\nfunction Signup() {\r\n    const [ID, setID] = useState(false)\r\n    const [PW, setPW] = useState(false)\r\n    const [PWC, setPWC] = useState(false)\r\n    const [Email, setEmail] = useState(false)\r\n\r\n    const handleID = () => setID(true)\r\n    const handlePW = () => setPW(true)\r\n    const handlePWC = () => setPWC(true)\r\n    const handleEmail = () => setEmail(true)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"login container\">\r\n                <div className=\"login-content-signup\">\r\n                    <form >\r\n                        <img src={IMSAFE} height=\"70px\" alt=\"\" />\r\n                        <div className={ID ? \"input-div one focus\" : \"input-div one\"}>\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h5>아이디</h5>\r\n                                <input onClick={handleID} className=\"input\" type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className={Email ? \"input-div one focus\" : \"input-div one\"}>\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h5>이메일</h5>\r\n                                <input onClick={handleEmail} className=\"input\" type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className={PW ? \"input-div two focus\" : \"input-div two\"}>\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h5>비밀번호</h5>\r\n                                <input onClick={handlePW} className=\"input\" type=\"password\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className={PWC ? \"input-div two focus\" : \"input-div two\"}>\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h5>비밀번호 확인</h5>\r\n                                <input onClick={handlePWC} className=\"input\" type=\"password\" />\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn\" value=\"회원가입\" />\r\n                    </form>\r\n                </div>\r\n                <div className=\"img-signup\">\r\n                    <div className=\"img-block\">\r\n                        <img src={loginIcon} alt=\"\" />\r\n                        <Link to=\"/login\" className=\"register-link\">이미 아이디가 있나요? 로그인</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport Signin from \"./Signin.js\";\r\nimport Signup from \"./Signup.js\";\r\n\r\nfunction SigninRouter() {\r\n\r\n    return (\r\n        <>\r\n            <Signin />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction SignupRouter() {\r\n\r\n    return (\r\n        <>\r\n            <Signup />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { SigninRouter, SignupRouter };","import React from \"react\";\r\nimport \"./CSS/Create.css\";\r\n\r\nfunction Create() {\r\n    return (\r\n        <>\r\n            <div className='create-content'>\r\n                <form className='create'>\r\n                    <div className=\"title\">\r\n                        노인 등록\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">성함 </div>\r\n                        <input type=\"name\" className=\"inputvalue name\" />\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">생년월일</div>\r\n                        <input type=\"date\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">성별</div>\r\n                        <div className=\"right gender\">\r\n                            <span> 남성 </span> <input type=\"radio\" name=\"gender\" value=\"male\" />\r\n                            <span> 여성 </span> <input type=\"radio\" name=\"gender\" value=\"female\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">주소</div>\r\n                        <input type=\"address\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">전화번호</div>\r\n                        <div className=\"righttel\">\r\n                            <input type=\"tel\" className=\"tel\" name='phone1' />\r\n                            <span> - </span>\r\n                            <input type=\"tel\" className=\"tel\" name='phone2' />\r\n                            <span> - </span>\r\n                            <input type=\"tel\" className=\"tel\" name='phone3' />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">진료기록</div>\r\n                        <input type=\"text\" className=\"inputvalue\" />\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">보호자 성함</div>\r\n                        <input type=\"protecter\" className=\"inputvalue name\" />\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">보호자 전화번호</div>\r\n                        <div className=\"righttel\">\r\n                            <input type=\"tel\" className=\"tel\" name='phone1' />\r\n                            <span> - </span>\r\n                            <input type=\"tel\" className=\"tel\" name='phone2' />\r\n                            <span> - </span>\r\n                            <input type=\"tel\" className=\"tel\" name='phone3' />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">담당자</div>\r\n                        <input type=\"hospital\" className=\"inputvalue name\" />\r\n                    </div>\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\">센서</div>\r\n                        <select className=\"right sensor\" name=\"sensor\">\r\n                            <option value=\"\">센서 선택</option>\r\n                            <option>센서 6</option>\r\n                            <option>센서 7</option>\r\n                            <option>센서 8</option>\r\n                            <option>센서 9</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"instance\">\r\n                        <div className=\"left\"></div>\r\n                        <input type=\"submit\" className=\"inputvalue btn\" value=\"생성\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Create;","import React from \"react\";\r\nimport Create from \"./Create.js\";\r\nimport Navbar from \"../Navbar/Navbar.js\";\r\n\r\n\r\nexport const CreateRouter = ({ match }) => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Create />\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination, useSortBy } from 'react-table'\r\n// A great library for fuzzy filtering/sorting items\r\nimport { matchSorter } from 'match-sorter'\r\nimport \"../../CSS/Inquiry.css\";\r\n\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    //const count = preGlobalFilteredRows.length\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <tr role=\"row\" className=\"global-filter\">\r\n            <th colSpan=\"1\" role=\"columnheader\">\r\n\r\n                전체 검색 :{' '}\r\n\r\n            </th>\r\n            <th colSpan=\"13\" role=\"columnheader\">\r\n                <input\r\n                    value={value || \"\"}\r\n                    onChange={e => {\r\n                        setValue(e.target.value);\r\n                        onChange(e.target.value);\r\n                    }}\r\n                    placeholder={`검색어를 입력하시오.`}\r\n                    style={{\r\n                        width: '450px',\r\n                        fontSize: '1.1rem',\r\n                        border: '0',\r\n                    }}\r\n                />\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NameColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`이름을 입력하세요`}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nfunction AddressColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`주소를 입력하세요`}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction PhoneColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`전화번호를 입력하세요`}\r\n        />\r\n    )\r\n}\r\nfunction MedicalRecordsColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    //const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n            }}\r\n            placeholder={`진료기록을 입력하세요`}\r\n        />\r\n    )\r\n}\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            options.add(row.values[id])\r\n        })\r\n        return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            className=\"select\"\r\n            value={filterValue}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            {options.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                    {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    )\r\n}\r\n\r\nfunction BooleanColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    /*\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            options.add(row.values[id])\r\n        })\r\n        return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n    */\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            className=\"select\"\r\n            value={filterValue}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            <option value=\"true\">양호</option>\r\n            <option value=\"false\" >불량</option>\r\n        </select>\r\n    )\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n    // Calculate the min and max\r\n    // using the preFilteredRows\r\n\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n            min = Math.min(row.values[id], min)\r\n            max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={filterValue || min}\r\n                onChange={e => {\r\n                    setFilter(parseInt(e.target.value, 10))\r\n                }}\r\n            />\r\n            <button onClick={() => setFilter(undefined)}>Off</button>\r\n        </>\r\n    )\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n            min = Math.min(row.values[id], min)\r\n            max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <input\r\n                className=\"numRangePrevious\"\r\n                value={filterValue[0] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n                }}\r\n                placeholder={`최소 (${min})`}\r\n\r\n            />\r\n            <div> ~ </div>\r\n            <input\r\n                className=\"numRangeNext\"\r\n                value={filterValue[1] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n                }}\r\n                placeholder={`최대 (${max})`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n/*\r\nfunction DateRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id }\r\n}) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]).getTime() : 0;\r\n        let max = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]).getTime() : 0;\r\n\r\n        preFilteredRows.forEach((row) => {\r\n            min = Math.min(new Date(row.values[id]).getTime(), min);\r\n            max = Math.max(new Date(row.values[id]).getTime(), max);\r\n        });\r\n        return [min, max];\r\n    }, [id, preFilteredRows]);\r\n\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <input\r\n                value={filterValue[0] || \"\"}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [val || undefined, old[1]]);\r\n                }}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginRight: \"0.5rem\"\r\n                }}\r\n            />\r\n            to\r\n            <input\r\n                value={filterValue[1] || \"\"}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [old[0], val || undefined]);\r\n                }}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginLeft: \"0.5rem\"\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction dateBetweenFilterFn(rows, id, filterValues) {\r\n    let sd = new Date(filterValues[0]);\r\n    let ed = new Date(filterValues[1]);\r\n    console.log(rows, id, filterValues)\r\n    return rows.filter(r => {\r\n        var time = new Date(r.values[id]);\r\n        console.log(time, ed, sd)\r\n        if (filterValues.length === 0) return rows;\r\n        return (time >= sd && time <= ed);\r\n    });\r\n}\r\n\r\ndateBetweenFilterFn.autoRemove = val => !val;\r\n\r\n*/\r\nfunction DateRangeColumnFilter({\r\n    column: {\r\n        filterValue = [],\r\n        preFilteredRows,\r\n        setFilter,\r\n        id\r\n    } }) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]) : new Date(0)\r\n        let max = preFilteredRows.length ? new Date(preFilteredRows[0].values[id]) : new Date(0)\r\n\r\n        preFilteredRows.forEach(row => {\r\n            const rowDate = new Date(row.values[id])\r\n\r\n            min = rowDate <= min ? rowDate : min\r\n            max = rowDate >= max ? rowDate : max\r\n        })\r\n\r\n        return [min, max]\r\n    }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"daterange-previous\"\r\n                min={min.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [val ? val : undefined, old[1]])\r\n                }}\r\n                type=\"date\"\r\n                value={filterValue[0] || ''}\r\n            />\r\n            <div>\r\n                {' ~ '}\r\n            </div>\r\n            <input\r\n                className=\"daterange-next\"\r\n                max={max.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value\r\n                    setFilter((old = []) => [old[0], val ? val.concat('T23:59:59.999Z') : undefined])\r\n                }}\r\n                type=\"date\"\r\n                value={filterValue[1]?.slice(0, 10) || ''}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction dateBetweenFilterFn(rows, id, filterValues) {\r\n    let sd = filterValues[0] ? new Date(filterValues[0]) : undefined\r\n    let ed = filterValues[1] ? new Date(filterValues[1]) : undefined\r\n\r\n    if (ed || sd) {\r\n        return rows.filter(r => {\r\n            var time = new Date(r.values[id])\r\n\r\n            if (ed && sd) {\r\n                return (time >= sd && time <= ed)\r\n            } else if (sd) {\r\n                return (time >= sd)\r\n            } else if (ed) {\r\n                return (time <= ed)\r\n            }\r\n        })\r\n    } else {\r\n        return rows\r\n    }\r\n}\r\n// Our table component\r\nfunction Table({ columns, data }) {\r\n\r\n\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            // Add a new fuzzyTextFilterFn filter type.\r\n            fuzzyText: fuzzyTextFilterFn,\r\n            dateBetween: dateBetweenFilterFn,\r\n            // Or, override the default text filter to use\r\n            // \"startWith\"\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter(row => {\r\n                    const rowValue = row.values[id]\r\n                    return rowValue !== undefined\r\n                        ? String(rowValue)\r\n                            .toLowerCase()\r\n                            .startsWith(String(filterValue).toLowerCase())\r\n                        : true\r\n                })\r\n            },\r\n        }),\r\n        []\r\n    )\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n        preGlobalFilteredRows,\r\n        setGlobalFilter,\r\n\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            // Be sure to pass the defaultColumn option\r\n            filterTypes,\r\n            initialState: {\r\n                sortBy: [\r\n                    {\r\n                        id: 'name',\r\n                        desc: false\r\n\r\n                    },\r\n                    {\r\n                        id: 'alarm-date',\r\n                        desc: true\r\n                    },\r\n                    {\r\n                        id: 'sensor-name',\r\n                        desc: false\r\n                    }\r\n                ]\r\n\r\n            }\r\n        },\r\n        useFilters, // useFilters!\r\n        useGlobalFilter, // useGlobalFilter!\r\n        useSortBy,\r\n        usePagination,\r\n    )\r\n\r\n    // We don't want to render all of the rows for this example, so cap\r\n    // it for this use case\r\n    // const firstPageRows = rows.slice(0, 10)\r\n    const { pageIndex, pageSize } = state\r\n\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    <GlobalFilter\r\n                        preGlobalFilteredRows={preGlobalFilteredRows}\r\n                        globalFilter={state.globalFilter}\r\n                        setGlobalFilter={setGlobalFilter}\r\n                    />\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} style={{ verticalAlign: 'top' }}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className={column.className} {...column.getHeaderProps()} sorted={column.sorted}>\r\n                                    <span {...column.getSortByToggleProps()}>\r\n                                        {column.render('Header')}\r\n                                    </span>\r\n                                    <span>{column.isSorted ? (column.isSortedDesc ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>) : ''}</span>\r\n                                    {/* Render the columns filter UI */}\r\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"page\">\r\n\r\n                <div className=\"pagePN\">\r\n\r\n                    <span className=\"movepage\">\r\n                        페이지 이동: {' '}\r\n                        <input type='number' defaultValue={pageIndex + 1}\r\n                            onChange={e => {\r\n                                const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                gotoPage(pageNumber)\r\n                            }}\r\n                            style={{ width: '50px' }} />\r\n                    </span>\r\n                    <span>\r\n                        페이지{' '}\r\n                        <strong>\r\n                            {pageIndex + 1} / {pageOptions.length}\r\n                        </strong> {' '}\r\n                    </span>\r\n                    <div className=\"btn-grid\">\r\n                        <div className=\"button\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</div>\r\n                        <div className=\"button\" onClick={() => previousPage()} disabled={!canPreviousPage}>이전</div>\r\n                        <div className=\"button\" onClick={() => nextPage()} disabled={!canNextPage}>이후</div>\r\n                        <div className=\"button\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{'>>'}</div>\r\n                    </div>\r\n                    <select className=\"select\" value={pageSize} onChange={e => setPageSize(Number(e.target.value))}>\r\n                        {\r\n                            [10, 25, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    {pageSize}개씩 보기\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n    return rows.filter(row => {\r\n        const rowValue = row.values[id]\r\n        return rowValue >= filterValue\r\n    })\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\n\r\n\r\nexport { Table, SliderColumnFilter, NumberRangeColumnFilter, SelectColumnFilter, filterGreaterThan, NameColumnFilter, AddressColumnFilter, PhoneColumnFilter, MedicalRecordsColumnFilter, DateRangeColumnFilter, BooleanColumnFilter };","import { NumberRangeColumnFilter, SelectColumnFilter, NameColumnFilter, AddressColumnFilter, PhoneColumnFilter, MedicalRecordsColumnFilter } from \"./Table\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const COLUMNS = [\r\n    {\r\n        Header: '노인 정보',\r\n        columns: [\r\n            {\r\n                Header: '성함',\r\n                accessor: '성함',\r\n                Filter: NameColumnFilter,\r\n                className: \"name\",\r\n                id: 'name',\r\n                Cell: ({ row }) => (<Link to={{\r\n                    pathname: `/detail/${row.original.id}`,\r\n                    state: {\r\n                        id: row.original.id,\r\n                        name: row.original.성함,\r\n                        age: row.original.나이,\r\n                        gender: row.original.성별,\r\n                        address: row.original.주소,\r\n                        phoneNum: row.original.전화번호,\r\n                        medicalRecord: row.original.진료기록,\r\n                        protector: row.original.보호자,\r\n                        protectorNum: row.original.보호자전화번호,\r\n                        PIC: row.original.담당자,\r\n                    }\r\n                }}><span className=\"name-link\">{row.original.성함}</span></Link>)\r\n            },\r\n            {\r\n                Header: '나이',\r\n                accessor: '나이',\r\n                Filter: NumberRangeColumnFilter,\r\n                filter: 'between',\r\n                className: \"age\",\r\n            },\r\n            {\r\n                Header: '성별',\r\n                accessor: '성별',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'includes',\r\n                className: \"gender\",\r\n            },\r\n            {\r\n                Header: '주소',\r\n                accessor: '주소',\r\n                Filter: AddressColumnFilter,\r\n                className: 'address',\r\n            },\r\n            {\r\n                Header: '전화번호',\r\n                accessor: '전화번호',\r\n                Filter: PhoneColumnFilter,\r\n                // Use our custom `fuzzyText` filter on this column\r\n                filter: 'fuzzyText',\r\n                className: 'phonenum',\r\n            },\r\n            {\r\n                Header: '진료기록',\r\n                accessor: '진료기록',\r\n                Filter: MedicalRecordsColumnFilter,\r\n                // Use our custom `fuzzyText` filter on this column\r\n                filter: 'fuzzyText',\r\n                className: \"medical-records\"\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        Header: '보호자',\r\n        columns: [\r\n            {\r\n                Header: '보호자 성함',\r\n                accessor: '보호자',\r\n                Filter: NameColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'protector',\r\n            },\r\n            {\r\n                Header: '보호자 전화번호',\r\n                accessor: '보호자전화번호',\r\n                Filter: PhoneColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'pphonenum',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        Header: '담당자',\r\n        accessor: '담당자',\r\n        Filter: NameColumnFilter,\r\n        filter: 'fuzzyText',\r\n        className: 'PIC',\r\n    },\r\n]\r\n\r\n","import React from \"react\";\r\nimport { Table } from \"./Tableset/Table\";\r\nimport { COLUMNS } from \"./Tableset/StateColumns\";\r\nimport MOCK_DATA from \"../../../JSON/MOCK_DATA_STATE.json\";\r\nimport \"../CSS/Inquiry.css\"\r\n\r\n\r\nfunction State() {\r\n    const columns = React.useMemo(() => COLUMNS, [])\r\n    const data = React.useMemo(() => MOCK_DATA, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='content'>\r\n                <Table columns={columns} data={data} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default State;","import { NumberRangeColumnFilter, NameColumnFilter, DateRangeColumnFilter, BooleanColumnFilter } from \"./Table\";\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: \"센서 정보\",\r\n        columns: [\r\n\r\n            {\r\n                Header: '센서 명',\r\n                accessor: '센서명',\r\n                Filter: NameColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'sensor-name',\r\n                id: 'sensor-name',\r\n            },\r\n            {\r\n                Header: '연결 가구',\r\n                accessor: '연결가구',\r\n                Filter: NameColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'connected',\r\n            },\r\n            {\r\n                Header: '건전지상태',\r\n                accessor: '건전지상태',\r\n                Filter: NumberRangeColumnFilter,\r\n                filter: 'between',\r\n                className: 'battery-status',\r\n            },\r\n            {\r\n                Header: '건전지 교체 시점',\r\n                accessor: '건전지교체시점',\r\n                Filter: DateRangeColumnFilter,\r\n                filter: 'dateBetween',\r\n                className: 'battery-change',\r\n            },\r\n            {\r\n                Header: '교체횟수',\r\n                accessor: '교체횟수',\r\n                Filter: NameColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'change-count',\r\n            },\r\n            {\r\n                id: 'powerstatus',\r\n                Header: '전원상태',\r\n                accessor: \"powerstatus\",\r\n                Cell: ({ value }) => (value === true ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>),\r\n                filterMethod: (filter, row) => {\r\n                    if (filter.value.indexOf(\"all\") > -1) {\r\n                        return true;\r\n                    }\r\n                    if (filter.value.indexOf(\"true\") > -1) {\r\n                        return row[filter.id] === true;\r\n                    }\r\n                    return row[filter.id] === false;\r\n                },\r\n                Filter: BooleanColumnFilter,\r\n                className: 'powerstatus',\r\n            },\r\n            {\r\n                id: 'networkstatus',\r\n                Header: '네트워크연결상태',\r\n                accessor: \"networkstatus\",\r\n                Cell: ({ value }) => (value === true ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>),\r\n                filterMethod: (filter, row) => {\r\n                    if (filter.value.indexOf(\"all\") > -1) {\r\n                        return true;\r\n                    }\r\n                    if (filter.value.indexOf(\"true\") > -1) {\r\n                        return row[filter.id] === true;\r\n                    }\r\n                    return row[filter.id] === false;\r\n                },\r\n                Filter: BooleanColumnFilter,\r\n                className: 'networkstatus',\r\n            },\r\n        ]\r\n    }\r\n]\r\n","import React from \"react\";\r\nimport { Table } from \"./Tableset/Table\";\r\nimport { COLUMNS } from \"./Tableset/SensorColumns\";\r\nimport MOCK_DATA from \"../../../JSON/MOCK_DATA_SENSOR.json\";\r\nimport \"../CSS/Inquiry.css\"\r\n\r\nfunction Sensor() {\r\n    const columns = React.useMemo(() => COLUMNS, [])\r\n    const data = React.useMemo(() => MOCK_DATA, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='content'>\r\n                <Table columns={columns} data={data} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sensor;","import { NumberRangeColumnFilter, SelectColumnFilter, NameColumnFilter, AddressColumnFilter, PhoneColumnFilter, MedicalRecordsColumnFilter, DateRangeColumnFilter } from \"./Table\";\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: \"날짜\",\r\n        accessor: \"날짜\",\r\n        Filter: DateRangeColumnFilter,\r\n        filter: 'dateBetween',\r\n        className: \"alarm-date\",\r\n        id: 'alarm-date',\r\n    },\r\n    {\r\n        Header: \"알람 내용\",\r\n        accessor: \"알람내용\",\r\n        Filter: NameColumnFilter,\r\n        className: \"alarm-content\",\r\n    },\r\n    {\r\n        Header: \"작동 센서\",\r\n        accessor: \"작동센서\",\r\n        Filter: NameColumnFilter,\r\n        className: \"alarm-sensor\",\r\n    },\r\n\r\n    {\r\n        Header: '노인 정보',\r\n        columns: [\r\n            {\r\n                Header: '성함',\r\n                accessor: '성함',\r\n                Filter: NameColumnFilter,\r\n                className: \"name\",\r\n            },\r\n            {\r\n                Header: '나이',\r\n                accessor: '나이',\r\n                Filter: NumberRangeColumnFilter,\r\n                filter: 'between',\r\n                className: \"age\",\r\n            },\r\n            {\r\n                Header: '성별',\r\n                accessor: '성별',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'includes',\r\n                className: \"gender\",\r\n            },\r\n            {\r\n                Header: '주소',\r\n                accessor: '주소',\r\n                Filter: AddressColumnFilter,\r\n                className: 'address',\r\n            },\r\n            {\r\n                Header: '전화번호',\r\n                accessor: '전화번호',\r\n                Filter: PhoneColumnFilter,\r\n                // Use our custom `fuzzyText` filter on this column\r\n                filter: 'fuzzyText',\r\n                className: 'phonenum',\r\n            },\r\n            {\r\n                Header: '진료기록',\r\n                accessor: '진료기록',\r\n                Filter: MedicalRecordsColumnFilter,\r\n                // Use our custom `fuzzyText` filter on this column\r\n                filter: 'fuzzyText',\r\n                className: \"medical-records\"\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        Header: '보호자',\r\n        columns: [\r\n            {\r\n                Header: '보호자 성함',\r\n                accessor: '보호자',\r\n                Filter: NameColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'protector',\r\n            },\r\n            {\r\n                Header: '보호자 전화번호',\r\n                accessor: '보호자전화번호',\r\n                Filter: PhoneColumnFilter,\r\n                filter: 'fuzzyText',\r\n                className: 'pphonenum',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        Header: '담당자',\r\n        accessor: '담당자',\r\n        Filter: NameColumnFilter,\r\n        filter: 'fuzzyText',\r\n        className: 'PIC',\r\n    },\r\n]\r\n\r\n","import React from \"react\";\r\nimport { Table } from \"./Tableset/Table\";\r\nimport { COLUMNS } from \"./Tableset/AlarmColumns.js\";\r\nimport MOCK_DATA from \"../../../JSON/MOCK_DATA_ALARM.json\";\r\nimport \"../CSS/Inquiry.css\"\r\n\r\nfunction Alarm() {\r\n    const columns = React.useMemo(() => COLUMNS, [])\r\n    const data = React.useMemo(() => MOCK_DATA, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='content'>\r\n                <Table columns={columns} data={data} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alarm;","import React from \"react\";\r\nimport State from \"./Pages/State.js\";\r\nimport Sensor from \"./Pages/Sensor.js\";\r\nimport Alarm from \"./Pages/Alarm.js\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { SidebarInquiry } from \"../Sidebar/Sidebar.js\";\r\nimport \"../../CSS/App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nexport const InquiryRouter = ({ match }) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <Navbar width=\"2300px\" />\r\n            <div className=\"inquiry-grid\">\r\n                <SidebarInquiry />\r\n                <Switch>\r\n                    <Route exact path={match.path + '/state'} component={State} />\r\n                    <Route exact path={match.path + '/sensor'} component={Sensor} />\r\n                    <Route exact path={match.path + '/alarm'} component={Alarm} />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nexport const WeeklyReport = (props) => {\r\n    const state = {\r\n        wakeupTime: \"04 : 48\",\r\n        sleepTime: \"21 : 50\",\r\n        averageSleep: \"6시간 15분\",\r\n        temp: '27도',\r\n        averageTV: '4시간 38분',\r\n        fallen: \"0\",\r\n        humidity: '9% / 36.7도',\r\n        outside: \"0.7\",\r\n        refrigerator: \"5\",\r\n        bathroom: \"4\",\r\n        cough: \"10\",\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"title\">\r\n                {props.name}님 생활 패턴 주간 보고서\r\n                <div className=\"subtitle\"> (최근 7일 기준)</div>\r\n            </div>\r\n            <div className=\"averagecontent\">\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">평균 기상시간</div>\r\n                    <div className=\"content\">{state.wakeupTime}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">평균 취침시간</div>\r\n                    <div className=\"content\">{state.sleepTime}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">평균 수면시간</div>\r\n                    <div className=\"content\">{state.averageSleep}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">평균 실내온도</div>\r\n                    <div className=\"content\">{state.temp}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">하루 평균 TV/Radio 시청시간 </div>\r\n                    <div className=\"content\">{state.averageTV}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">낙상 횟수</div>\r\n                    <div className=\"content\">{state.fallen}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">평균 습도/ 체온</div>\r\n                    <div className=\"content\">{state.humidity}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">하루 평균 외출 횟수</div>\r\n                    <div className=\"content\">{state.outside}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">하루 평균 냉장고 계폐</div>\r\n                    <div className=\"content\">{state.refrigerator}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">하루 평균 화장실 출입</div>\r\n                    <div className=\"content\">{state.bathroom}</div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div className=\"subtitle\">최근 1주일간</div>\r\n                    <div className=\"title\">평균 기침 횟수</div>\r\n                    <div className=\"content\">{state.cough}</div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { SidebarInquiry } from \"../Sidebar/Sidebar\";\r\nimport \"./CSS/Detail.css\";\r\nimport { WeeklyReport } from \"./WeeklyReport\";\r\n\r\nclass Detail extends React.Component {\r\n    state = {\r\n        alarmState: true,\r\n        alarmLog: [\r\n            \"2021-07-06 센서 1 낙상(Fallen) 발생\",\r\n            \"2021-06-18 센서 1 발열증세 발생\",\r\n            \"2021-03-01 센서 1 낙상(Fallen) 발생\"\r\n        ],\r\n        sensorInf: {\r\n            sensorName: \"센서1\",\r\n            batteryStatus: \"89%\",\r\n            batteryChangeDate: \"2020-08-18 16:47\",\r\n            batteryChangeCount: \"2\",\r\n            powerStatus: true,\r\n            networkStatus: true\r\n        },\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const { location, history } = this.props;\r\n        if (location.state)\r\n            if (location.state === undefined) {\r\n                history.push(\"/home\");\r\n            }\r\n\r\n    }\r\n    render() {\r\n        const { location } = this.props;\r\n        const printLog = this.state.alarmLog.map((log) => <div className=\"alarm-content\">{log}</div>);\r\n        if (location.state) {\r\n            return (\r\n                <>\r\n                    <Navbar />\r\n                    <div className=\"inquiry-grid\">\r\n                        <SidebarInquiry />\r\n                        <div className=\"detail\">\r\n                            <div className=\"detail-top\">\r\n                                <div className=\"detail-left\">\r\n                                    <div className=\"text\">\r\n                                        <div className=\"title\">\r\n                                            <div className=\"title-title\">\r\n                                                {location.state.name}님 세부정보\r\n                                            </div>\r\n                                            <button className=\"btn\"> 수정하기</button>\r\n                                        </div>\r\n                                        <div className=\"detail-content\">\r\n                                            <div className=\"subtitle\" >본인 정보</div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    나이 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.age}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    성별 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.gender}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    주소 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.address}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    전화번호 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.phoneNum}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    진료기록 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.medicalRecord}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"subtitle\" >보호자 정보</div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    성함 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.protector}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    전화번호 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.protectorNum}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"subtitle\" >병원 정보</div>\r\n                                            <div className=\"substance\">\r\n                                                <div className=\"left\">\r\n                                                    담당자 :\r\n                                                </div>\r\n                                                <div className=\"right\">\r\n                                                    {location.state.PIC}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"detail-right\">\r\n                                    <div className=\"alarm-status\">\r\n                                        <span>알람 상태 : </span>\r\n                                        <span>\r\n                                            {this.state.alarmState ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"alarm-log\">\r\n                                        <div className=\"title\">알람 로그</div>\r\n                                        <div className=\"log\">\r\n                                            {printLog}\r\n                                        </div>\r\n                                        <div className=\"more\">더보기...</div>\r\n                                    </div>\r\n                                    <div className=\"sensor-inf\">\r\n                                        <div className=\"title\">센서 정보</div>\r\n                                        <div className=\"subtitle\">기기 정보</div>\r\n                                        <div className=\"substance\">\r\n                                            <span className=\"left\">센서명 :</span>\r\n                                            <span className=\"right\">{this.state.sensorInf.sensorName}</span>\r\n                                        </div>\r\n                                        <div className=\"subtitle\">건전지 정보</div>\r\n                                        <div className=\"substance\">\r\n                                            <span className=\"left\">상태 :</span>\r\n                                            <span className=\"right\">{this.state.sensorInf.batteryStatus}</span>\r\n                                        </div>\r\n                                        <div className=\"substance\">\r\n                                            <span className=\"left\">교체 시점 :</span>\r\n                                            <span className=\"right\">{this.state.sensorInf.batteryChangeDate}</span>\r\n                                        </div>\r\n                                        <div className=\"substance\">\r\n                                            <span className=\"left\">교체 횟수 :</span>\r\n                                            <span className=\"right\">{this.state.sensorInf.batteryChangeCount}</span>\r\n                                        </div>\r\n                                        <div className=\"subtitle\">센서 상태</div>\r\n\r\n                                        <div className=\"substance\">\r\n                                            <span className=\"left\">전원 :</span>\r\n                                            <span className=\"right\">{this.state.sensorInf.powerStatus ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>}</span>\r\n                                        </div>\r\n                                        <div className=\"substance\">\r\n                                            <span className=\"left\">네트워크 :</span>\r\n                                            <span className=\"right\">{this.state.sensorInf.networkStatus ? <i className=\"fas fa-check-circle\"></i> : <i className=\"fas fa-times\"></i>}</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"detail-bottom\">\r\n                                <WeeklyReport id={location.state.id} name={location.state.name} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport { Detail };","import { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\"\r\nimport { HomeRouter } from \"./Components/Home/HomeRouter.js\";\r\nimport { SettingsRouter } from \"./Components/Settings/SettingsRouter.js\";\r\nimport { SigninRouter, SignupRouter } from \"./Components/Login/LoginRouter.js\";\r\nimport { CreateRouter } from \"./Components/Create/CreateRouter.js\";\r\nimport { InquiryRouter } from \"./Components/Inquiry/InquiryRouter.js\";\r\nimport { Detail } from \"./Components/Detail/Detail.js\";\r\nimport './CSS/App.css';\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/login\" exact={true} component={SigninRouter} />\r\n        <Route path=\"/register\" exact={true} component={SignupRouter} />\r\n        <Route path=\"/home\" exact={true} component={HomeRouter} />\r\n        <Route path=\"/inquiry\" component={InquiryRouter} />\r\n        <Route path=\"/settings\" component={SettingsRouter} />\r\n        <Route path=\"/create\" component={CreateRouter} />\r\n        <Route path=\"/detail/:id\" component={Detail} />\r\n      </Switch>\r\n    </HashRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}